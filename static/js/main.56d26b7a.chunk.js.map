{"version":3,"sources":["components/todoreact/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","_useState","useState","_useState2","_slicedToArray","inputdata","setInputData","_useState3","lists","localStorage","getItem","JSON","parse","getLocalData","_useState4","items","setItems","_useState5","_useState6","isEditItem","setIsEditItem","_useState7","_useState8","toggleButton","setToggleButton","addItem","map","curElem","id","_objectSpread","name","myNewInputData","Date","getTime","toString","concat","_toConsumableArray","alert","useEffect","setItem","stringify","React","createElement","Fragment","className","src","alt","type","placeholder","value","onChange","event","target","onClick","key","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.56d26b7a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\n// get the localStorage data back\r\nconst getLocalData = () => {\r\n  const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n  if (lists) {\r\n    return JSON.parse(lists);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const [inputdata, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n\r\n  // add the items fucnction\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"plz fill the data\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map((curElem) => {\r\n          if (curElem.id === isEditItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  //edit the items\r\n  const editItem = (index) => {\r\n    const item_todo_edited = items.find((curElem) => {\r\n      return curElem.id === index;\r\n    });\r\n    setInputData(item_todo_edited.name);\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  // how to delete items section\r\n  const deleteItem = (index) => {\r\n    const updatedItems = items.filter((curElem) => {\r\n      return curElem.id !== index;\r\n    });\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  // remove all the elements\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  // adding localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n            <figcaption>Add Your List Here ✌</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"✍ Add Item\"\r\n              className=\"form-control\"\r\n              value={inputdata}\r\n              onChange={(event) => setInputData(event.target.value)}\r\n            />\r\n            {toggleButton ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n            )}\r\n          </div>\r\n          {/* show our items  */}\r\n          <div className=\"showItems\">\r\n            {items.map((curElem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={curElem.id}>\r\n                  <h3>{curElem.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curElem.id)}></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deleteItem(curElem.id)}></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* rmeove all button  */}\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}>\r\n              <span> CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\nimport Todo from \"./components/todoreact/todo\";\n// import Temp from \"./components/weather/temp\";\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}